name: Deploy to production

on:
  workflow_dispatch:
  
permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  AWS_REGION: ${{ vars.AWS_REGION }}

jobs:
  deploy-to-production:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Login to Docker
      run: docker login -u brandonarbour -p ${{ secrets.DOCKER_PASSWORD }}

    - name: Pull latest dev image
      run: docker pull brandonarbour/dev-capstone-web:latest

    - name: Tag image for prod repo
      run: |
        docker tag brandonarbour/dev-capstone-web:latest brandonarbour/capstone-web:latest
        docker tag brandonarbour/capstone-web:latest brandonarbour/capstone-web:${GITHUB_SHA::7}
    
    - name: Push the Docker image
      run: docker push brandonarbour/capstone-web --all-tags

    - name: Setup AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE }}
        aws-region: ${{ vars.AWS_REGION }}
        role-session-name: GitHub-OIDC-Terraform
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.2.5
    
    - name: Terraform Init
      id: init
      env:
        AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
        AWS_BUCKET_PROD_TFSTATES: ${{ secrets.AWS_BUCKET_PROD_TFSTATES }}
      run: |
        cd ./Terraform/Prod
        terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_PROD_TFSTATES}" -backend-config="region=${AWS_REGION}"

    - name: Terraform Validate
      id: validate
      run: |
        cd ./Terraform/Prod
        terraform validate
    
    - name: Terraform Apply
      run: |
        cd ./Terraform/Prod
        terraform apply -auto-approve -var "prod_cidr_ipv4=${{ secrets.PROD_CIDR_IPV4 }}" -var "prod_image_name=brandonarbour/capstone-web:${GITHUB_SHA::7}"