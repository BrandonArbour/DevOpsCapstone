name: Build, push and deploy dev

on:
  push:
    branches: [ "main" ]
    paths:
      - 'Web App/**'
      - 'Terraform/Dev/**'

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ vars.AWS_REGION }}

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Login to Docker
      run: docker login -u brandonarbour -p ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build the Docker image
      run: |
        cd './Web App'
        docker build --file Dockerfile -t brandonarbour/dev-capstone-web:latest -t brandonarbour/dev-capstone-web:${GITHUB_SHA::7} .
    
    - name: Run vulnerability scanner
      uses: aquasecurity/trivy-action@0.28.0
      with: 
        image-ref: 'brandonarbour/dev-capstone-web:latest'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'

    - name: Push the Docker image
      run: docker push brandonarbour/dev-capstone-web --all-tags
    
    - name: Setup AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE }}
        aws-region: ${{ vars.AWS_REGION }}
        role-session-name: GitHub-OIDC-Terraform
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.2.5
    
    - name: Terraform Init
      id: init
      env:
        AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
        AWS_BUCKET_DEV_TFSTATES: ${{ secrets.AWS_BUCKET_DEV_TFSTATES }}
      run: |
        cd ./Terraform/Dev
        terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_DEV_TFSTATES}" -backend-config="region=${AWS_REGION}"

    - name: Terraform Validate
      id: validate
      run: |
        cd ./Terraform/Dev
        terraform validate -no-color
    
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        cd ./Terraform/Dev
        terraform apply -auto-approve -var "dev_cidr_ipv4=${{ secrets.DEV_CIDR_IPV4 }}" -var "dev_image_name=brandonarbour/dev-capstone-web:${GITHUB_SHA::7}"